apiVersion: apps/v1
kind: Deployment
metadata:
  name: beebop-deploy-redis
  labels:
    app: beebop-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: beebop-redis
  template:
    metadata:
      labels:
        app: beebop-redis
    spec:
      containers:
        - name: beebop-redis
          image: redis
          imagePullPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: beebop-deploy-server
  labels:
    app: beebop-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: beebop-server
  template:
    metadata:
      labels:
        app: beebop-server
    spec:
      initContainers:
        - name: wait-for-redis
          image: busybox
          command:
            [
              "sh",
              "-c",
              "until nslookup beebop-redis-svc.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mydb; sleep 2; done",
            ]
      containers:
        - name: beebop-server
          # TODO: update to main when branch is merged
          image: mrcide/beebop-server:test-k8s
          imagePullPolicy: Always
          env:
            - name: REDIS_URL
              value: redis://beebop-redis-svc:6379
            - name: SERVER_PORT
              value: "4000"
            - name: API_URL
              value: http://beebop-py-api-svc:5000
            - name: CLIENT_URL
              value: https://beebop-dev.dide.ic.ac.uk
            - name: SERVER_URL
              value: https://beebop-dev.dide.ic.ac.uk/api
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: googleClientId
            - name: GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: googleClientSecret
            - name: GITHUB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: githubClientId
            - name: GITHUB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: githubClientSecret
            - name: SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: sessionSecret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: beebop-deploy-py-api
  labels:
    app: beebop-py-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: beebop-py-api
  template:
    metadata:
      labels:
        app: beebop-py-api
    spec:
      initContainers:
        - name: init-storage
          image: mrcide/beebop-py:main
          imagePullPolicy: Always
          command: ["sh", "-c", "./scripts/download_db"]
          volumeMounts:
            - name: beebop-storage
              mountPath: /beebop/storage
        - name: wait-for-redis
          image: busybox
          imagePullPolicy: Always
          command:
            [
              "sh",
              "-c",
              "until nslookup beebop-redis-svc.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mydb; sleep 2; done",
            ]
      containers:
        - name: beebop-py-api
          image: mrcide/beebop-py:main
          imagePullPolicy: Always
          env:
            - name: REDIS_HOST
              value: beebop-redis-svc
            - name: STORAGE_LOCATION
              value: ./storage
            - name: DB_LOCATION
              value: ./storage/GPS_v8_ref
          volumeMounts:
            - name: beebop-storage
              mountPath: /beebop/storage
      volumes:
        - name: beebop-storage
          persistentVolumeClaim:
            claimName: beebop-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: beebop-deploy-py-worker
  labels:
    app: beebop-py-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: beebop-py-worker
  template:
    metadata:
      labels:
        app: beebop-py-worker
    spec:
      initContainers:
        - name: wait-for-redis
          image: busybox
          imagePullPolicy: Always
          command:
            [
              "sh",
              "-c",
              "until nslookup beebop-redis-svc.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mydb; sleep 2; done",
            ]
      containers:
        - name: beebop-py-worker
          image: mrcide/beebop-py:main
          imagePullPolicy: Always
          command: ["rqworker"]
          env:
            - name: REDIS_HOST
              value: beebop-redis-svc
          volumeMounts:
            - name: beebop-storage
              mountPath: /beebop/storage
      volumes:
        - name: beebop-storage
          persistentVolumeClaim:
            claimName: beebop-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: beebop-deploy-client
  labels:
    app: beebop-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: beebop-client
  template:
    metadata:
      labels:
        app: beebop-client
    spec:
      containers:
        - name: beebop-client
          # TODO: update to main when branch merged
          image: mrcide/beebop-proxy:test-k8s
          imagePullPolicy: Always
